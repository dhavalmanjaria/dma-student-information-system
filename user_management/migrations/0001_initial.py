# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-22 19:14
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AllPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'default_permissions': (),
                'managed': False,
                'permissions': set([('can_write_notices', 'can write notices'), ('can_write_activity_log', 'can write activity log'), ('can_read_main_page', 'can read main page'), ('can_read_exam_schedule', 'can read exam schedule'), ('can_write_fee_dues', 'can write fee dues'), ('can_read_assignments', 'can read assignments'), ('can_write_bonafide_req', 'can write bonafide req'), ('can_write_university_credits', 'can write university credits'), ('can_write_personal_profile', 'can write personal profile'), ('can_read_bonafide_req', 'can read bonafide req'), ('can_write_online_discussion', 'can write online discussion'), ('can_write_library_card_req', 'can write library card req'), ('can_write_meeting_details', 'can write meeting details'), ('can_read_exam_hall_plan', 'can read exam hall plan'), ('can_write_exam_schedule', 'can write exam schedule'), ('can_read_time_table', 'can read time table'), ('can_read_fee_collections', 'can read fee collections'), ('can_read_id_card_req', 'can read id card req'), ('can_write_exam_hall_plan', 'can write exam hall plan'), ('can_read_rail_pass_req', 'can read rail pass req'), ('can_write_pass_my_book', 'can write pass my book'), ('can_read_meeting_details', 'can read meeting details'), ('can_authenticate_users', 'can authenticate users'), ('can_read_university_credits', 'can read university credits'), ('can_write_id_card_req', 'can write id card req'), ('can_read_notices', 'can read notices'), ('can_read_fee_dues', 'can read fee dues'), ('can_write_study_materials', 'can write study materials'), ('can_read_online_discussion', 'can read online discussion'), ('can_write_attendance', 'can write attendance'), ('can_write_internal_assessment', 'can write internal assessment'), ('can_write_rail_pass_req', 'can write rail pass req'), ('can_read_study_materials', 'can read study materials'), ('can_read_library_card_req', 'can read library card req'), ('can_write_fee_collections', 'can write fee collections'), ('can_read_activity_log', 'can read activity log'), ('can_write_time_table', 'can write time table'), ('can_read_pass_my_book', 'can read pass my book'), ('can_read_attendance', 'can read attendance'), ('can_write_assignments', 'can write assignments'), ('can_read_internal_assessment', 'can read internal assessent')]),
            },
        ),
        migrations.CreateModel(
            name='AdminInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BasicInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('contact_number', models.CharField(blank=True, help_text='The contact number of the user', max_length=10)),
                ('serial_no', models.CharField(help_text='Simpler unique identifier for this user', max_length=6, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('long_name', models.CharField(help_text='The full name of the course', max_length=200)),
                ('short_name', models.CharField(help_text='Short, abbreivated namethat the course is referred by', max_length=5)),
                ('hod', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FacultyInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user_management.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester_number', models.IntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_management.Course')),
            ],
        ),
        migrations.CreateModel(
            name='StudentInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user_management.Semester')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the subject', max_length=200)),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_management.Semester')),
            ],
        ),
        migrations.AddField(
            model_name='facultyinfo',
            name='subjects',
            field=models.ManyToManyField(blank=True, null=True, to='user_management.Subject'),
        ),
        migrations.AddField(
            model_name='facultyinfo',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
